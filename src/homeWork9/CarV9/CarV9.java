package homeWork9.CarV9;

import java.util.StringJoiner;

/**
 * This class is an example of Consumer Driven Development. All fields and methods are only needed for
 * class realization. Start data for fields tankCapacity, fuelConsumption, fuelInTank generated by Math.random() method.
 * Field location used once for displaying state on start.
 * Used only one setter for field tripDistance for setting tripDistance to zero.
 * Used only one getter for field fuelInTank for getting data from field.
 * The constructor doesn't need, because the CarV9 member was created using the default constructor.
 */
public class CarV9 {
    private double tankCapacity = (int) (Math.random() * 31 + 30);
    private double fuelConsumption = (Math.random() * 11 + 5);
    private double fuelInTank = tankCapacity / 100.0 * (int) (Math.random() * 41 + 10);
    private double tripDistance;
    private double tripMoneySpent;
    private String location = "Одесса";

    public void setTripDistance(double tripDistance) {
        this.tripDistance = tripDistance;
    }

    public double getFuelInTank() {
        return fuelInTank;
    }

    /**
     * Fills the tank using user data. If the amount of fuel is greater
     * than the space in the tank, fill the required amount.
     *
     * @param liters Fuel quantity amount getting from user by Scanner
     * @param fuelPrice Fuel price getting from user by Scanner
     */
    public void fillTank(double liters, double fuelPrice) {
        double fuelToFullTank = tankCapacity - fuelInTank;
        if (liters > fuelToFullTank) {
            liters = fuelToFullTank;
        }
        System.out.printf("Заправлено %.1f литров. Оплачено %.2f грн.\n", liters, liters * fuelPrice);
        fuelInTank += liters;
        tripMoneySpent += liters * fuelPrice;
    }

    /**
     * Fills full tank using fillTank() method.
     *
     * @param fuelPrice Fuel price getting from user by Scanner
     */
    public void fillFullTank(double fuelPrice) {
        System.out.println("Заправляем полный бак.");
        fillTank(tankCapacity - fuelInTank, fuelPrice);
    }

    /**
     * Driving imitation. Calculates fuel, that was used for trip to destination point.
     *
     * @param distance The trip distance in kilometers, int value.
     * @param destination The name of destination point.
     * @throws RuntimeException If the fuel in the tank doesn't enough for trip.
     */
    public void drive(int distance, String destination) throws RuntimeException {
        System.out.printf("Едем в %s. %s км ...\n", destination, distance);
        fuelInTank -= distance / 100.0 * fuelConsumption;
        if (fuelInTank < 0) {
            throw new RuntimeException("Приехали... БЕНЗИН ЗАКОНЧИЛСЯ!");
        }
        tripDistance += distance;
    }

    /**
     * Printing report about the trip. Display fuel in tank amount,
     * trip distance and how much spent fuel costs.
     */
    public void printTripReport() {
        System.out.println("-------Отчет о поездке-------");
        System.out.printf(
                "Остаток топлива в баке %.1f литров. Всего проехали %.0f км. Всего потрачено %.2f грн.\n",
                getFuelInTank(),
                tripDistance,
                tripMoneySpent);
    }

    /**
     * Overriding toString() for displaying CarV9 member info.
     *
     * @return Info with data about car.
     */
    @Override
    public String toString() {
        return new StringJoiner(", ", CarV9.class.getSimpleName() + "[", "]")
                .add("tripDistance=" + tripDistance)
                .add("tripMoneySpent=" + tripMoneySpent)
                .add("fuelInTank=" + fuelInTank)
                .add("tankCapacity=" + tankCapacity)
                .add("fuelConsumption=" + fuelConsumption)
                .add("location=" + location)
                .toString();
    }
}
